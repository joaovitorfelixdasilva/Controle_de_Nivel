

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Aug 18 00:06:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000E                     	;# 
   461  000F                     	;# 
   462  0010                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0013                     	;# 
   466  0014                     	;# 
   467  0015                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  0081                     	;# 
   481  0085                     	;# 
   482  0086                     	;# 
   483  0087                     	;# 
   484  0088                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  008F                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  0105                     	;# 
   509  0107                     	;# 
   510  0108                     	;# 
   511  0109                     	;# 
   512  010C                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0185                     	;# 
   518  0187                     	;# 
   519  0188                     	;# 
   520  0189                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0008                     _PORTD	set	8
   524  0008                     _PORTDbits	set	8
   525  0005                     _PORTAbits	set	5
   526  0007                     _PORTCbits	set	7
   527  0088                     _TRISDbits	set	136
   528  0085                     _TRISAbits	set	133
   529  0087                     _TRISCbits	set	135
   530                           
   531                           	psect	strings
   532  0003                     __pstrings:
   533  0003                     stringtab:
   534  0003                     __stringtab:
   535  0003                     stringcode:	
   536                           ;	String table - string pointers are 1 byte each
   537                           
   538  0003                     stringdir:
   539  0003  3000               	movlw	high stringdir
   540  0004  008A               	movwf	10
   541  0005  0804               	movf	4,w
   542  0006  0A84               	incf	4,f
   543  0007  0782               	addwf	2,f
   544  0008                     __stringbase:
   545  0008  3400               	retlw	0
   546  0009                     __end_of__stringtab:
   547  0009                     STR_2:
   548  0009  3420               	retlw	32	;' '
   549  000A  3449               	retlw	73	;'I'
   550  000B  346E               	retlw	110	;'n'
   551  000C  3466               	retlw	102	;'f'
   552  000D  3465               	retlw	101	;'e'
   553  000E  3472               	retlw	114	;'r'
   554  000F  3469               	retlw	105	;'i'
   555  0010  346F               	retlw	111	;'o'
   556  0011  3472               	retlw	114	;'r'
   557  0012  3420               	retlw	32	;' '
   558  0013  3420               	retlw	32	;' '
   559  0014  3420               	retlw	32	;' '
   560  0015  3420               	retlw	32	;' '
   561  0016  3420               	retlw	32	;' '
   562  0017  3420               	retlw	32	;' '
   563  0018  3420               	retlw	32	;' '
   564  0019  3400               	retlw	0
   565  001A                     STR_1:
   566  001A  3420               	retlw	32	;' '
   567  001B  3453               	retlw	83	;'S'
   568  001C  3475               	retlw	117	;'u'
   569  001D  3470               	retlw	112	;'p'
   570  001E  3465               	retlw	101	;'e'
   571  001F  3472               	retlw	114	;'r'
   572  0020  3469               	retlw	105	;'i'
   573  0021  346F               	retlw	111	;'o'
   574  0022  3472               	retlw	114	;'r'
   575  0023  3420               	retlw	32	;' '
   576  0024  3420               	retlw	32	;' '
   577  0025  3420               	retlw	32	;' '
   578  0026  3420               	retlw	32	;' '
   579  0027  3420               	retlw	32	;' '
   580  0028  3420               	retlw	32	;' '
   581  0029  3420               	retlw	32	;' '
   582  002A  3400               	retlw	0
   583  002B                     STR_5:
   584  002B  3441               	retlw	65	;'A'
   585  002C  344C               	retlw	76	;'L'
   586  002D  3454               	retlw	84	;'T'
   587  002E  344F               	retlw	79	;'O'
   588  002F  3420               	retlw	32	;' '
   589  0030  3400               	retlw	0
   590  0031                     STR_4:
   591  0031  344D               	retlw	77	;'M'
   592  0032  3445               	retlw	69	;'E'
   593  0033  3444               	retlw	68	;'D'
   594  0034  3449               	retlw	73	;'I'
   595  0035  344F               	retlw	79	;'O'
   596  0036  3400               	retlw	0
   597  0037                     STR_6:
   598  0037  3456               	retlw	86	;'V'
   599  0038  3441               	retlw	65	;'A'
   600  0039  345A               	retlw	90	;'Z'
   601  003A  3449               	retlw	73	;'I'
   602  003B  344F               	retlw	79	;'O'
   603  003C  3400               	retlw	0
   604  003D                     STR_3:
   605  003D  3442               	retlw	66	;'B'
   606  003E  3441               	retlw	65	;'A'
   607  003F  3449               	retlw	73	;'I'
   608  0040  3458               	retlw	88	;'X'
   609  0041  344F               	retlw	79	;'O'
   610  0042  3400               	retlw	0
   611  002B                     
   612                           	psect	cinit
   613  07FC                     start_initialization:	
   614                           ; #config settings
   615                           
   616  07FC                     __initialization:
   617  07FC                     end_of_initialization:	
   618                           ;End of C runtime variable initialization code
   619                           
   620  07FC                     __end_of__initialization:
   621  07FC  0183               	clrf	3
   622  07FD  120A  118A  2ED9   	ljmp	_main	;jump to C main() function
   623                           
   624                           	psect	cstackCOMMON
   625  0070                     __pcstackCOMMON:
   626  0070                     ?_lcd_init:
   627  0070                     ?_Sensores_init:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??_Sensores_init:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_Potencia_init:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_Potencia_init:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_delay:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_main:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_lcd_instReg:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ??_lcd_instReg:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_lcd_dataReg:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_lcd_dataReg:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     delay@t:	
   658                           ; 1 bytes @ 0x0
   659                           
   660                           
   661                           ; 2 bytes @ 0x0
   662  0070                     	ds	2
   663  0072                     ??_delay:
   664  0072                     lcd_instReg@i:	
   665                           ; 1 bytes @ 0x2
   666                           
   667  0072                     lcd_dataReg@d:	
   668                           ; 1 bytes @ 0x2
   669                           
   670                           
   671                           ; 1 bytes @ 0x2
   672  0072                     	ds	1
   673  0073                     ??_lcd_init:
   674  0073                     ?_lcd_lincol:	
   675                           ; 1 bytes @ 0x3
   676                           
   677  0073                     lcd_lincol@col:	
   678                           ; 1 bytes @ 0x3
   679                           
   680                           
   681                           ; 1 bytes @ 0x3
   682  0073                     	ds	1
   683  0074                     ??_lcd_lincol:
   684                           
   685                           ; 1 bytes @ 0x4
   686  0074                     	ds	1
   687  0075                     lcd_lincol@lin:
   688                           
   689                           ; 1 bytes @ 0x5
   690  0075                     	ds	1
   691  0076                     ?_lcd_print:
   692  0076                     lcd_print@col:	
   693                           ; 1 bytes @ 0x6
   694                           
   695                           
   696                           ; 1 bytes @ 0x6
   697  0076                     	ds	1
   698  0077                     lcd_print@str:
   699                           
   700                           ; 1 bytes @ 0x7
   701  0077                     	ds	1
   702  0078                     ??_lcd_print:
   703                           
   704                           ; 1 bytes @ 0x8
   705  0078                     	ds	1
   706  0079                     lcd_print@pos:
   707                           
   708                           ; 1 bytes @ 0x9
   709  0079                     	ds	1
   710  007A                     lcd_print@lin:
   711                           
   712                           ; 1 bytes @ 0xA
   713  007A                     	ds	1
   714  007B                     ??_main:
   715                           
   716                           ; 1 bytes @ 0xB
   717  007B                     	ds	2
   718                           
   719                           	psect	maintext
   720  06D9                     __pmaintext:	
   721 ;;
   722 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   723 ;;
   724 ;; *************** function _main *****************
   725 ;; Defined at:
   726 ;;		line 8 in file "main.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : B00/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          2       0       0       0       0
   743 ;;      Totals:         2       0       0       0       0
   744 ;;Total ram usage:        2 bytes
   745 ;; Hardware stack levels required when called: 3
   746 ;; This function calls:
   747 ;;		_Potencia_init
   748 ;;		_Sensores_init
   749 ;;		_lcd_init
   750 ;;		_lcd_print
   751 ;; This function is called by:
   752 ;;		Startup code after reset
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756  06D9                     _main:	
   757                           ;psect for function _main
   758                           
   759  06D9                     l921:	
   760                           ;incstack = 0
   761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   762                           
   763                           
   764                           ;main.c: 10:    lcd_init();
   765  06D9  120A  118A  2623  120A  118A  	fcall	_lcd_init
   766  06DE                     l923:
   767                           
   768                           ;main.c: 11:    Sensores_init();
   769  06DE  120A  118A  2593  120A  118A  	fcall	_Sensores_init
   770  06E3                     l925:
   771                           
   772                           ;main.c: 12:    Potencia_init();
   773  06E3  120A  118A  258D  120A  118A  	fcall	_Potencia_init
   774  06E8                     l927:
   775                           
   776                           ;main.c: 14:    lcd_print(0,0, " Superior       " );
   777  06E8  01F6               	clrf	lcd_print@col
   778  06E9  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   779  06EA  00FB               	movwf	??_main
   780  06EB  087B               	movf	??_main,w
   781  06EC  00F7               	movwf	lcd_print@str
   782  06ED  3000               	movlw	0
   783  06EE  120A  118A  25F2  120A  118A  	fcall	_lcd_print
   784  06F3                     l929:
   785                           
   786                           ;main.c: 15:    lcd_print(1,0, " Inferior       " );
   787  06F3  01F6               	clrf	lcd_print@col
   788  06F4  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   789  06F5  00FB               	movwf	??_main
   790  06F6  087B               	movf	??_main,w
   791  06F7  00F7               	movwf	lcd_print@str
   792  06F8  3001               	movlw	1
   793  06F9  120A  118A  25F2  120A  118A  	fcall	_lcd_print
   794  06FE                     l931:
   795                           
   796                           ;main.c: 18:     {;main.c: 19:         {;main.c: 20:         if(PORTCbits.RC0 == 1)
   797  06FE  1283               	bcf	3,5	;RP0=0, select bank0
   798  06FF  1303               	bcf	3,6	;RP1=0, select bank0
   799  0700  1C07               	btfss	7,0	;volatile
   800  0701  2F03               	goto	u421
   801  0702  2F04               	goto	u420
   802  0703                     u421:
   803  0703  2F1A               	goto	l939
   804  0704                     u420:
   805  0704                     l933:
   806                           
   807                           ;main.c: 21:         if(PORTCbits.RC1 == 0)
   808  0704  1887               	btfsc	7,1	;volatile
   809  0705  2F07               	goto	u431
   810  0706  2F08               	goto	u430
   811  0707                     u431:
   812  0707  2F1A               	goto	l939
   813  0708                     u430:
   814  0708                     l935:
   815                           
   816                           ;main.c: 22:         if(PORTCbits.RC2 == 0)
   817  0708  1907               	btfsc	7,2	;volatile
   818  0709  2F0B               	goto	u441
   819  070A  2F0C               	goto	u440
   820  070B                     u441:
   821  070B  2F1A               	goto	l939
   822  070C                     u440:
   823  070C                     l937:
   824                           
   825                           ;main.c: 23:             lcd_print(1,10, "BAIXO" );
   826  070C  300A               	movlw	10
   827  070D  00FB               	movwf	??_main
   828  070E  087B               	movf	??_main,w
   829  070F  00F6               	movwf	lcd_print@col
   830  0710  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   831  0711  00FC               	movwf	??_main+1
   832  0712  087C               	movf	??_main+1,w
   833  0713  00F7               	movwf	lcd_print@str
   834  0714  3001               	movlw	1
   835  0715  120A  118A  25F2  120A  118A  	fcall	_lcd_print
   836  071A                     l939:
   837                           
   838                           ;main.c: 24:         };main.c: 25:         {;main.c: 26:         if(PORTCbits.RC1 == 1)
   839  071A  1283               	bcf	3,5	;RP0=0, select bank0
   840  071B  1303               	bcf	3,6	;RP1=0, select bank0
   841  071C  1C87               	btfss	7,1	;volatile
   842  071D  2F1F               	goto	u451
   843  071E  2F20               	goto	u450
   844  071F                     u451:
   845  071F  2F32               	goto	l945
   846  0720                     u450:
   847  0720                     l941:
   848                           
   849                           ;main.c: 27:         if(PORTCbits.RC2 == 0)
   850  0720  1907               	btfsc	7,2	;volatile
   851  0721  2F23               	goto	u461
   852  0722  2F24               	goto	u460
   853  0723                     u461:
   854  0723  2F32               	goto	l945
   855  0724                     u460:
   856  0724                     l943:
   857                           
   858                           ;main.c: 28:             lcd_print(1,10, "MEDIO" );
   859  0724  300A               	movlw	10
   860  0725  00FB               	movwf	??_main
   861  0726  087B               	movf	??_main,w
   862  0727  00F6               	movwf	lcd_print@col
   863  0728  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   864  0729  00FC               	movwf	??_main+1
   865  072A  087C               	movf	??_main+1,w
   866  072B  00F7               	movwf	lcd_print@str
   867  072C  3001               	movlw	1
   868  072D  120A  118A  25F2  120A  118A  	fcall	_lcd_print
   869  0732                     l945:
   870                           
   871                           ;main.c: 29:         };main.c: 30:         {;main.c: 31:         if(PORTCbits.RC2 == 1)
   872  0732  1283               	bcf	3,5	;RP0=0, select bank0
   873  0733  1303               	bcf	3,6	;RP1=0, select bank0
   874  0734  1D07               	btfss	7,2	;volatile
   875  0735  2F37               	goto	u471
   876  0736  2F38               	goto	u470
   877  0737                     u471:
   878  0737  2F46               	goto	l949
   879  0738                     u470:
   880  0738                     l947:
   881                           
   882                           ;main.c: 32:             lcd_print(1,10, "ALTO " );
   883  0738  300A               	movlw	10
   884  0739  00FB               	movwf	??_main
   885  073A  087B               	movf	??_main,w
   886  073B  00F6               	movwf	lcd_print@col
   887  073C  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   888  073D  00FC               	movwf	??_main+1
   889  073E  087C               	movf	??_main+1,w
   890  073F  00F7               	movwf	lcd_print@str
   891  0740  3001               	movlw	1
   892  0741  120A  118A  25F2  120A  118A  	fcall	_lcd_print
   893  0746                     l949:
   894                           
   895                           ;main.c: 33:         };main.c: 34:         {;main.c: 35:         if(PORTCbits.RC0 == 0)
   896  0746  1283               	bcf	3,5	;RP0=0, select bank0
   897  0747  1303               	bcf	3,6	;RP1=0, select bank0
   898  0748  1807               	btfsc	7,0	;volatile
   899  0749  2F4B               	goto	u481
   900  074A  2F4C               	goto	u480
   901  074B                     u481:
   902  074B  2F62               	goto	l957
   903  074C                     u480:
   904  074C                     l951:
   905                           
   906                           ;main.c: 36:         if(PORTCbits.RC1 == 0)
   907  074C  1887               	btfsc	7,1	;volatile
   908  074D  2F4F               	goto	u491
   909  074E  2F50               	goto	u490
   910  074F                     u491:
   911  074F  2F62               	goto	l957
   912  0750                     u490:
   913  0750                     l953:
   914                           
   915                           ;main.c: 37:         if(PORTCbits.RC2 == 0)
   916  0750  1907               	btfsc	7,2	;volatile
   917  0751  2F53               	goto	u501
   918  0752  2F54               	goto	u500
   919  0753                     u501:
   920  0753  2F62               	goto	l957
   921  0754                     u500:
   922  0754                     l955:
   923                           
   924                           ;main.c: 38:             lcd_print(1,10, "VAZIO" );
   925  0754  300A               	movlw	10
   926  0755  00FB               	movwf	??_main
   927  0756  087B               	movf	??_main,w
   928  0757  00F6               	movwf	lcd_print@col
   929  0758  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   930  0759  00FC               	movwf	??_main+1
   931  075A  087C               	movf	??_main+1,w
   932  075B  00F7               	movwf	lcd_print@str
   933  075C  3001               	movlw	1
   934  075D  120A  118A  25F2  120A  118A  	fcall	_lcd_print
   935  0762                     l957:
   936                           
   937                           ;main.c: 39:         };main.c: 41:         {;main.c: 42:         if(PORTCbits.RC3 == 1)
   938  0762  1283               	bcf	3,5	;RP0=0, select bank0
   939  0763  1303               	bcf	3,6	;RP1=0, select bank0
   940  0764  1D87               	btfss	7,3	;volatile
   941  0765  2F67               	goto	u511
   942  0766  2F68               	goto	u510
   943  0767                     u511:
   944  0767  2F7E               	goto	l965
   945  0768                     u510:
   946  0768                     l959:
   947                           
   948                           ;main.c: 43:         if(PORTCbits.RC4 == 0)
   949  0768  1A07               	btfsc	7,4	;volatile
   950  0769  2F6B               	goto	u521
   951  076A  2F6C               	goto	u520
   952  076B                     u521:
   953  076B  2F7E               	goto	l965
   954  076C                     u520:
   955  076C                     l961:
   956                           
   957                           ;main.c: 44:         if(PORTCbits.RC5 == 0)
   958  076C  1A87               	btfsc	7,5	;volatile
   959  076D  2F6F               	goto	u531
   960  076E  2F70               	goto	u530
   961  076F                     u531:
   962  076F  2F7E               	goto	l965
   963  0770                     u530:
   964  0770                     l963:
   965                           
   966                           ;main.c: 45:             lcd_print(0,10, "BAIXO" );
   967  0770  300A               	movlw	10
   968  0771  00FB               	movwf	??_main
   969  0772  087B               	movf	??_main,w
   970  0773  00F6               	movwf	lcd_print@col
   971  0774  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   972  0775  00FC               	movwf	??_main+1
   973  0776  087C               	movf	??_main+1,w
   974  0777  00F7               	movwf	lcd_print@str
   975  0778  3000               	movlw	0
   976  0779  120A  118A  25F2  120A  118A  	fcall	_lcd_print
   977  077E                     l965:
   978                           
   979                           ;main.c: 46:         };main.c: 47:         {;main.c: 48:         if(PORTCbits.RC4 == 1)
   980  077E  1283               	bcf	3,5	;RP0=0, select bank0
   981  077F  1303               	bcf	3,6	;RP1=0, select bank0
   982  0780  1E07               	btfss	7,4	;volatile
   983  0781  2F83               	goto	u541
   984  0782  2F84               	goto	u540
   985  0783                     u541:
   986  0783  2F96               	goto	l971
   987  0784                     u540:
   988  0784                     l967:
   989                           
   990                           ;main.c: 49:         if(PORTCbits.RC5 == 0)
   991  0784  1A87               	btfsc	7,5	;volatile
   992  0785  2F87               	goto	u551
   993  0786  2F88               	goto	u550
   994  0787                     u551:
   995  0787  2F96               	goto	l971
   996  0788                     u550:
   997  0788                     l969:
   998                           
   999                           ;main.c: 50:             lcd_print(0,10, "MEDIO" );
  1000  0788  300A               	movlw	10
  1001  0789  00FB               	movwf	??_main
  1002  078A  087B               	movf	??_main,w
  1003  078B  00F6               	movwf	lcd_print@col
  1004  078C  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1005  078D  00FC               	movwf	??_main+1
  1006  078E  087C               	movf	??_main+1,w
  1007  078F  00F7               	movwf	lcd_print@str
  1008  0790  3000               	movlw	0
  1009  0791  120A  118A  25F2  120A  118A  	fcall	_lcd_print
  1010  0796                     l971:
  1011                           
  1012                           ;main.c: 51:         };main.c: 52:         {;main.c: 53:         if(PORTCbits.RC5 == 1)
  1013  0796  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0797  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0798  1E87               	btfss	7,5	;volatile
  1016  0799  2F9B               	goto	u561
  1017  079A  2F9C               	goto	u560
  1018  079B                     u561:
  1019  079B  2FAA               	goto	l975
  1020  079C                     u560:
  1021  079C                     l973:
  1022                           
  1023                           ;main.c: 54:             lcd_print(0,10, "ALTO " );
  1024  079C  300A               	movlw	10
  1025  079D  00FB               	movwf	??_main
  1026  079E  087B               	movf	??_main,w
  1027  079F  00F6               	movwf	lcd_print@col
  1028  07A0  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1029  07A1  00FC               	movwf	??_main+1
  1030  07A2  087C               	movf	??_main+1,w
  1031  07A3  00F7               	movwf	lcd_print@str
  1032  07A4  3000               	movlw	0
  1033  07A5  120A  118A  25F2  120A  118A  	fcall	_lcd_print
  1034  07AA                     l975:
  1035                           
  1036                           ;main.c: 55:         };main.c: 56:         {;main.c: 57:         if(PORTCbits.RC3 == 0)
  1037  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1038  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1039  07AC  1987               	btfsc	7,3	;volatile
  1040  07AD  2FAF               	goto	u571
  1041  07AE  2FB0               	goto	u570
  1042  07AF                     u571:
  1043  07AF  2FC6               	goto	l983
  1044  07B0                     u570:
  1045  07B0                     l977:
  1046                           
  1047                           ;main.c: 58:         if(PORTCbits.RC4 == 0)
  1048  07B0  1A07               	btfsc	7,4	;volatile
  1049  07B1  2FB3               	goto	u581
  1050  07B2  2FB4               	goto	u580
  1051  07B3                     u581:
  1052  07B3  2FC6               	goto	l983
  1053  07B4                     u580:
  1054  07B4                     l979:
  1055                           
  1056                           ;main.c: 59:         if(PORTCbits.RC5 == 0)
  1057  07B4  1A87               	btfsc	7,5	;volatile
  1058  07B5  2FB7               	goto	u591
  1059  07B6  2FB8               	goto	u590
  1060  07B7                     u591:
  1061  07B7  2FC6               	goto	l983
  1062  07B8                     u590:
  1063  07B8                     l981:
  1064                           
  1065                           ;main.c: 60:             lcd_print(0,10, "VAZIO" );
  1066  07B8  300A               	movlw	10
  1067  07B9  00FB               	movwf	??_main
  1068  07BA  087B               	movf	??_main,w
  1069  07BB  00F6               	movwf	lcd_print@col
  1070  07BC  302F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1071  07BD  00FC               	movwf	??_main+1
  1072  07BE  087C               	movf	??_main+1,w
  1073  07BF  00F7               	movwf	lcd_print@str
  1074  07C0  3000               	movlw	0
  1075  07C1  120A  118A  25F2  120A  118A  	fcall	_lcd_print
  1076  07C6                     l983:
  1077                           
  1078                           ;main.c: 61:         };main.c: 64:         {;main.c: 65:         if(PORTCbits.RC2 == 0)
  1079  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1080  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1081  07C8  1907               	btfsc	7,2	;volatile
  1082  07C9  2FCB               	goto	u601
  1083  07CA  2FCC               	goto	u600
  1084  07CB                     u601:
  1085  07CB  2FD3               	goto	l46
  1086  07CC                     u600:
  1087  07CC                     l985:
  1088                           
  1089                           ;main.c: 66:         if(PORTAbits.RA6 == 1)
  1090  07CC  1F05               	btfss	5,6	;volatile
  1091  07CD  2FCF               	goto	u611
  1092  07CE  2FD0               	goto	u610
  1093  07CF                     u611:
  1094  07CF  2FD2               	goto	l47
  1095  07D0                     u610:
  1096  07D0                     l987:
  1097                           
  1098                           ;main.c: 67:             PORTAbits.RA1 = 1;
  1099  07D0  1485               	bsf	5,1	;volatile
  1100  07D1  2FD3               	goto	l46
  1101  07D2                     l47:	
  1102                           ;main.c: 68:         else
  1103                           
  1104                           
  1105                           ;main.c: 69:            PORTAbits.RA1 = 0;
  1106  07D2  1085               	bcf	5,1	;volatile
  1107  07D3                     l46:
  1108                           
  1109                           ;main.c: 70:         if(PORTCbits.RC2 == 1)
  1110  07D3  1D07               	btfss	7,2	;volatile
  1111  07D4  2FD6               	goto	u621
  1112  07D5  2FD7               	goto	u620
  1113  07D6                     u621:
  1114  07D6  2FD8               	goto	l49
  1115  07D7                     u620:
  1116  07D7                     l989:
  1117                           
  1118                           ;main.c: 71:             PORTAbits.RA1 = 0;
  1119  07D7  1085               	bcf	5,1	;volatile
  1120  07D8                     l49:
  1121                           
  1122                           ;main.c: 72:         };main.c: 74:         {;main.c: 75:         if(PORTCbits.RC5 == 0)
  1123  07D8  1A87               	btfsc	7,5	;volatile
  1124  07D9  2FDB               	goto	u631
  1125  07DA  2FDC               	goto	u630
  1126  07DB                     u631:
  1127  07DB  2FE3               	goto	l50
  1128  07DC                     u630:
  1129  07DC                     l991:
  1130                           
  1131                           ;main.c: 76:         if(PORTAbits.RA7 == 1)
  1132  07DC  1F85               	btfss	5,7	;volatile
  1133  07DD  2FDF               	goto	u641
  1134  07DE  2FE0               	goto	u640
  1135  07DF                     u641:
  1136  07DF  2FE2               	goto	l51
  1137  07E0                     u640:
  1138  07E0                     l993:
  1139                           
  1140                           ;main.c: 77:             PORTDbits.RD7 = 1;
  1141  07E0  1788               	bsf	8,7	;volatile
  1142  07E1  2FE3               	goto	l50
  1143  07E2                     l51:	
  1144                           ;main.c: 78:          else
  1145                           
  1146                           
  1147                           ;main.c: 79:             PORTDbits.RD7 = 0;
  1148  07E2  1388               	bcf	8,7	;volatile
  1149  07E3                     l50:
  1150                           
  1151                           ;main.c: 80:         if(PORTCbits.RC5 == 1)
  1152  07E3  1E87               	btfss	7,5	;volatile
  1153  07E4  2FE6               	goto	u651
  1154  07E5  2FE7               	goto	u650
  1155  07E6                     u651:
  1156  07E6  2FE8               	goto	l53
  1157  07E7                     u650:
  1158  07E7                     l995:
  1159                           
  1160                           ;main.c: 81:             PORTDbits.RD7 = 0;
  1161  07E7  1388               	bcf	8,7	;volatile
  1162  07E8                     l53:
  1163                           
  1164                           ;main.c: 82:         };main.c: 83:         {;main.c: 84:         if(PORTCbits.RC5 == 0)
  1165  07E8  1A87               	btfsc	7,5	;volatile
  1166  07E9  2FEB               	goto	u661
  1167  07EA  2FEC               	goto	u660
  1168  07EB                     u661:
  1169  07EB  2FF3               	goto	l54
  1170  07EC                     u660:
  1171  07EC                     l997:
  1172                           
  1173                           ;main.c: 85:         if(PORTDbits.RD7 == 1)
  1174  07EC  1F88               	btfss	8,7	;volatile
  1175  07ED  2FEF               	goto	u671
  1176  07EE  2FF0               	goto	u670
  1177  07EF                     u671:
  1178  07EF  2FF2               	goto	l55
  1179  07F0                     u670:
  1180  07F0                     l999:
  1181                           
  1182                           ;main.c: 86:             PORTDbits.RD6 = 1;
  1183  07F0  1708               	bsf	8,6	;volatile
  1184  07F1  2FF3               	goto	l54
  1185  07F2                     l55:	
  1186                           ;main.c: 87:          else
  1187                           
  1188                           
  1189                           ;main.c: 88:             PORTDbits.RD6 = 0;
  1190  07F2  1308               	bcf	8,6	;volatile
  1191  07F3                     l54:
  1192                           
  1193                           ;main.c: 89:         if(PORTCbits.RC5 == 1)
  1194  07F3  1E87               	btfss	7,5	;volatile
  1195  07F4  2FF6               	goto	u681
  1196  07F5  2FF7               	goto	u680
  1197  07F6                     u681:
  1198  07F6  2EFE               	goto	l931
  1199  07F7                     u680:
  1200  07F7                     l1001:
  1201                           
  1202                           ;main.c: 90:             PORTDbits.RD6 = 0;
  1203  07F7  1308               	bcf	8,6	;volatile
  1204  07F8  2EFE               	goto	l931
  1205  07F9  120A  118A  2800   	ljmp	start
  1206  07FC                     __end_of_main:
  1207                           
  1208                           	psect	text1
  1209  05F2                     __ptext1:	
  1210 ;; *************** function _lcd_print *****************
  1211 ;; Defined at:
  1212 ;;		line 179 in file "lcd.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  lin             1    wreg     unsigned char 
  1215 ;;  col             1    6[COMMON] unsigned char 
  1216 ;;  str             1    7[COMMON] PTR const unsigned char 
  1217 ;;		 -> STR_10(6), STR_9(6), STR_8(6), STR_7(6), 
  1218 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  1219 ;;		 -> STR_2(17), STR_1(17), 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  lin             1   10[COMMON] unsigned char 
  1222 ;;  pos             1    9[COMMON] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         2       0       0       0       0
  1233 ;;      Locals:         2       0       0       0       0
  1234 ;;      Temps:          1       0       0       0       0
  1235 ;;      Totals:         5       0       0       0       0
  1236 ;;Total ram usage:        5 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 2
  1239 ;; This function calls:
  1240 ;;		_lcd_dataReg
  1241 ;;		_lcd_lincol
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247  05F2                     _lcd_print:	
  1248                           ;psect for function _lcd_print
  1249                           
  1250                           
  1251                           ;incstack = 0
  1252                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1253                           ;lcd_print@lin stored from wreg
  1254  05F2  00FA               	movwf	lcd_print@lin
  1255  05F3                     l909:
  1256                           
  1257                           ;lcd.c: 179: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
      +                          d.c: 180: {;lcd.c: 181:     char pos = col;
  1258  05F3  0876               	movf	lcd_print@col,w
  1259  05F4  00F8               	movwf	??_lcd_print
  1260  05F5  0878               	movf	??_lcd_print,w
  1261  05F6  00F9               	movwf	lcd_print@pos
  1262  05F7                     l911:
  1263                           
  1264                           ;lcd.c: 182:     lcd_lincol( lin, col );
  1265  05F7  0876               	movf	lcd_print@col,w
  1266  05F8  00F8               	movwf	??_lcd_print
  1267  05F9  0878               	movf	??_lcd_print,w
  1268  05FA  00F3               	movwf	lcd_lincol@col
  1269  05FB  087A               	movf	lcd_print@lin,w
  1270  05FC  120A  118A  259E  120A  118A  	fcall	_lcd_lincol
  1271                           
  1272                           ;lcd.c: 184:     while( *str )
  1273  0601  2E16               	goto	l919
  1274  0602                     l913:
  1275                           
  1276                           ;lcd.c: 185:     {;lcd.c: 186:         lcd_dataReg( *str );
  1277  0602  0877               	movf	lcd_print@str,w
  1278  0603  0084               	movwf	4
  1279  0604  120A  118A  2003  120A  118A  	fcall	stringdir
  1280  0609  120A  118A  25C6  120A  118A  	fcall	_lcd_dataReg
  1281  060E                     l915:
  1282                           
  1283                           ;lcd.c: 187:         ++str;
  1284  060E  3001               	movlw	1
  1285  060F  00F8               	movwf	??_lcd_print
  1286  0610  0878               	movf	??_lcd_print,w
  1287  0611  07F7               	addwf	lcd_print@str,f
  1288  0612                     l917:
  1289                           
  1290                           ;lcd.c: 188:         ++pos;
  1291  0612  3001               	movlw	1
  1292  0613  00F8               	movwf	??_lcd_print
  1293  0614  0878               	movf	??_lcd_print,w
  1294  0615  07F9               	addwf	lcd_print@pos,f
  1295  0616                     l919:
  1296                           
  1297                           ;lcd.c: 184:     while( *str )
  1298  0616  0877               	movf	lcd_print@str,w
  1299  0617  0084               	movwf	4
  1300  0618  120A  118A  2003  120A  118A  	fcall	stringdir
  1301  061D  3A00               	xorlw	0
  1302  061E  1D03               	skipz
  1303  061F  2E21               	goto	u411
  1304  0620  2E22               	goto	u410
  1305  0621                     u411:
  1306  0621  2E02               	goto	l913
  1307  0622                     u410:
  1308  0622                     l104:
  1309  0622  0008               	return
  1310  0623                     __end_of_lcd_print:
  1311                           
  1312                           	psect	text2
  1313  059E                     __ptext2:	
  1314 ;; *************** function _lcd_lincol *****************
  1315 ;; Defined at:
  1316 ;;		line 120 in file "lcd.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  lin             1    wreg     unsigned char 
  1319 ;;  col             1    3[COMMON] unsigned char 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  lin             1    5[COMMON] unsigned char 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         1       0       0       0       0
  1332 ;;      Locals:         1       0       0       0       0
  1333 ;;      Temps:          1       0       0       0       0
  1334 ;;      Totals:         3       0       0       0       0
  1335 ;;Total ram usage:        3 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 1
  1338 ;; This function calls:
  1339 ;;		_lcd_instReg
  1340 ;; This function is called by:
  1341 ;;		_lcd_print
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345  059E                     _lcd_lincol:	
  1346                           ;psect for function _lcd_lincol
  1347                           
  1348                           
  1349                           ;incstack = 0
  1350                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  1351                           ;lcd_lincol@lin stored from wreg
  1352  059E  00F5               	movwf	lcd_lincol@lin
  1353  059F                     l891:
  1354                           
  1355                           ;lcd.c: 120: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 121: {;lcd.c:
      +                           122:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  1356  059F  0875               	movf	lcd_lincol@lin,w
  1357  05A0  00F4               	movwf	??_lcd_lincol
  1358  05A1  3006               	movlw	6
  1359  05A2                     u405:
  1360  05A2  1003               	clrc
  1361  05A3  0DF4               	rlf	??_lcd_lincol,f
  1362  05A4  3EFF               	addlw	-1
  1363  05A5  1D03               	skipz
  1364  05A6  2DA2               	goto	u405
  1365  05A7  0873               	movf	lcd_lincol@col,w
  1366  05A8  0774               	addwf	??_lcd_lincol,w
  1367  05A9  397F               	andlw	127
  1368  05AA  3E80               	addlw	128
  1369  05AB  120A  118A  2662  120A  118A  	fcall	_lcd_instReg
  1370  05B0                     l95:
  1371  05B0  0008               	return
  1372  05B1                     __end_of_lcd_lincol:
  1373                           
  1374                           	psect	text3
  1375  05C6                     __ptext3:	
  1376 ;; *************** function _lcd_dataReg *****************
  1377 ;; Defined at:
  1378 ;;		line 102 in file "lcd.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  d               1    wreg     unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  d               1    2[COMMON] unsigned char 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1392 ;;      Params:         0       0       0       0       0
  1393 ;;      Locals:         1       0       0       0       0
  1394 ;;      Temps:          2       0       0       0       0
  1395 ;;      Totals:         3       0       0       0       0
  1396 ;;Total ram usage:        3 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_lcd_print
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405  05C6                     _lcd_dataReg:	
  1406                           ;psect for function _lcd_dataReg
  1407                           
  1408                           
  1409                           ;incstack = 0
  1410                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  1411                           ;lcd_dataReg@d stored from wreg
  1412  05C6  00F2               	movwf	lcd_dataReg@d
  1413  05C7                     l751:
  1414                           
  1415                           ;lcd.c: 102: void lcd_dataReg( unsigned char d );lcd.c: 103: {;lcd.c: 104:     PORTDbits
      +                          .RD4 = 1;
  1416  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1417  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1418  05C9  1608               	bsf	8,4	;volatile
  1419  05CA                     l753:
  1420                           
  1421                           ;lcd.c: 105:     PORTD = ((PORTD & 0xF0)|(d >> 4&0x0F));
  1422  05CA  0872               	movf	lcd_dataReg@d,w
  1423  05CB  00F0               	movwf	??_lcd_dataReg
  1424  05CC  3004               	movlw	4
  1425  05CD                     u95:
  1426  05CD  1003               	clrc
  1427  05CE  0CF0               	rrf	??_lcd_dataReg,f
  1428  05CF  3EFF               	addlw	-1
  1429  05D0  1D03               	skipz
  1430  05D1  2DCD               	goto	u95
  1431  05D2  300F               	movlw	15
  1432  05D3  0570               	andwf	??_lcd_dataReg,w
  1433  05D4  00F1               	movwf	??_lcd_dataReg+1
  1434  05D5  0808               	movf	8,w	;volatile
  1435  05D6  39F0               	andlw	240
  1436  05D7  0471               	iorwf	??_lcd_dataReg+1,w
  1437  05D8  0088               	movwf	8	;volatile
  1438  05D9                     l755:
  1439                           
  1440                           ;lcd.c: 106:     PORTDbits.RD5 = 0;
  1441  05D9  1288               	bcf	8,5	;volatile
  1442  05DA                     l757:
  1443                           
  1444                           ;lcd.c: 107:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1445  05DA  300D               	movlw	13
  1446  05DB  00F0               	movwf	??_lcd_dataReg
  1447  05DC                     u697:
  1448  05DC  0BF0               	decfsz	??_lcd_dataReg,f
  1449  05DD  2DDC               	goto	u697
  1450  05DE                     l759:
  1451                           
  1452                           ;lcd.c: 108:     PORTDbits.RD5 = 1;
  1453  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1454  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1455  05E0  1688               	bsf	8,5	;volatile
  1456  05E1                     l761:
  1457                           
  1458                           ;lcd.c: 110:     PORTDbits.RD4 = 1;
  1459  05E1  1608               	bsf	8,4	;volatile
  1460  05E2                     l763:
  1461                           
  1462                           ;lcd.c: 111:     PORTD = ((PORTD & 0xF0)|(d&0x0F));
  1463  05E2  300F               	movlw	15
  1464  05E3  0572               	andwf	lcd_dataReg@d,w
  1465  05E4  00F0               	movwf	??_lcd_dataReg
  1466  05E5  0808               	movf	8,w	;volatile
  1467  05E6  39F0               	andlw	240
  1468  05E7  0470               	iorwf	??_lcd_dataReg,w
  1469  05E8  0088               	movwf	8	;volatile
  1470  05E9                     l765:
  1471                           
  1472                           ;lcd.c: 112:     PORTDbits.RD5 = 0;
  1473  05E9  1288               	bcf	8,5	;volatile
  1474                           
  1475                           ;lcd.c: 113:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1476  05EA  300D               	movlw	13
  1477  05EB  00F0               	movwf	??_lcd_dataReg
  1478  05EC                     u707:
  1479  05EC  0BF0               	decfsz	??_lcd_dataReg,f
  1480  05ED  2DEC               	goto	u707
  1481  05EE                     l767:
  1482                           
  1483                           ;lcd.c: 114:     PORTDbits.RD5 = 1;
  1484  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  1485  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  1486  05F0  1688               	bsf	8,5	;volatile
  1487  05F1                     l92:
  1488  05F1  0008               	return
  1489  05F2                     __end_of_lcd_dataReg:
  1490                           
  1491                           	psect	text4
  1492  0623                     __ptext4:	
  1493 ;; *************** function _lcd_init *****************
  1494 ;; Defined at:
  1495 ;;		line 130 in file "lcd.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         0       0       0       0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 1
  1516 ;; This function calls:
  1517 ;;		_delay
  1518 ;;		_lcd_instReg
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524  0623                     _lcd_init:	
  1525                           ;psect for function _lcd_init
  1526                           
  1527  0623                     l893:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1530                           
  1531                           
  1532                           ;lcd.c: 132:     delay(100);
  1533  0623  3064               	movlw	100
  1534  0624  00F0               	movwf	delay@t
  1535  0625  3000               	movlw	0
  1536  0626  00F1               	movwf	delay@t+1
  1537  0627  120A  118A  25B1  120A  118A  	fcall	_delay
  1538  062C                     l895:
  1539                           
  1540                           ;lcd.c: 136:     TRISDbits.TRISD0 = 0;
  1541  062C  1683               	bsf	3,5	;RP0=1, select bank1
  1542  062D  1303               	bcf	3,6	;RP1=0, select bank1
  1543  062E  1008               	bcf	8,0	;volatile
  1544  062F                     l897:
  1545                           
  1546                           ;lcd.c: 137:     TRISDbits.TRISD1 = 0;
  1547  062F  1088               	bcf	8,1	;volatile
  1548  0630                     l899:
  1549                           
  1550                           ;lcd.c: 138:     TRISDbits.TRISD2 = 0;
  1551  0630  1108               	bcf	8,2	;volatile
  1552  0631                     l901:
  1553                           
  1554                           ;lcd.c: 139:     TRISDbits.TRISD3 = 0;
  1555  0631  1188               	bcf	8,3	;volatile
  1556  0632                     l903:
  1557                           
  1558                           ;lcd.c: 140:     TRISDbits.TRISD4 = 0;
  1559  0632  1208               	bcf	8,4	;volatile
  1560  0633                     l905:
  1561                           
  1562                           ;lcd.c: 141:     TRISDbits.TRISD5 = 0;
  1563  0633  1288               	bcf	8,5	;volatile
  1564                           
  1565                           ;lcd.c: 154:     delay(100);
  1566  0634  3064               	movlw	100
  1567  0635  00F0               	movwf	delay@t
  1568  0636  3000               	movlw	0
  1569  0637  00F1               	movwf	delay@t+1
  1570  0638  120A  118A  25B1  120A  118A  	fcall	_delay
  1571  063D                     l907:
  1572                           
  1573                           ;lcd.c: 155:     PORTDbits.RD5 = 1;
  1574  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1575  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1576  063F  1688               	bsf	8,5	;volatile
  1577                           
  1578                           ;lcd.c: 156:     lcd_instReg( 0x20|0x00|0x08 );
  1579  0640  3028               	movlw	40
  1580  0641  120A  118A  2662  120A  118A  	fcall	_lcd_instReg
  1581                           
  1582                           ;lcd.c: 157:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  1583  0646  300C               	movlw	12
  1584  0647  120A  118A  2662  120A  118A  	fcall	_lcd_instReg
  1585                           
  1586                           ;lcd.c: 158:     lcd_instReg( 0x01 );
  1587  064C  3001               	movlw	1
  1588  064D  120A  118A  2662  120A  118A  	fcall	_lcd_instReg
  1589                           
  1590                           ;lcd.c: 159:     lcd_instReg( 0x02 );
  1591  0652  3002               	movlw	2
  1592  0653  120A  118A  2662  120A  118A  	fcall	_lcd_instReg
  1593                           
  1594                           ;lcd.c: 160:     delay(100);
  1595  0658  3064               	movlw	100
  1596  0659  00F0               	movwf	delay@t
  1597  065A  3000               	movlw	0
  1598  065B  00F1               	movwf	delay@t+1
  1599  065C  120A  118A  25B1  120A  118A  	fcall	_delay
  1600  0661                     l98:
  1601  0661  0008               	return
  1602  0662                     __end_of_lcd_init:
  1603                           
  1604                           	psect	text5
  1605  0662                     __ptext5:	
  1606 ;; *************** function _lcd_instReg *****************
  1607 ;; Defined at:
  1608 ;;		line 67 in file "lcd.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  i               1    wreg     unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  i               1    2[COMMON] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         0       0       0       0       0
  1623 ;;      Locals:         1       0       0       0       0
  1624 ;;      Temps:          2       0       0       0       0
  1625 ;;      Totals:         3       0       0       0       0
  1626 ;;Total ram usage:        3 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_lcd_lincol
  1632 ;;		_lcd_init
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636  0662                     _lcd_instReg:	
  1637                           ;psect for function _lcd_instReg
  1638                           
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  1642                           ;lcd_instReg@i stored from wreg
  1643  0662  00F2               	movwf	lcd_instReg@i
  1644  0663                     l703:
  1645                           
  1646                           ;lcd.c: 67: void lcd_instReg( unsigned char i );lcd.c: 68: {;lcd.c: 69:     PORTDbits.RD
      +                          4 = 0;
  1647  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0665  1208               	bcf	8,4	;volatile
  1650  0666                     l705:
  1651                           
  1652                           ;lcd.c: 70:     PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  1653  0666  0872               	movf	lcd_instReg@i,w
  1654  0667  00F0               	movwf	??_lcd_instReg
  1655  0668  3004               	movlw	4
  1656  0669                     u15:
  1657  0669  1003               	clrc
  1658  066A  0CF0               	rrf	??_lcd_instReg,f
  1659  066B  3EFF               	addlw	-1
  1660  066C  1D03               	skipz
  1661  066D  2E69               	goto	u15
  1662  066E  300F               	movlw	15
  1663  066F  0570               	andwf	??_lcd_instReg,w
  1664  0670  00F1               	movwf	??_lcd_instReg+1
  1665  0671  0808               	movf	8,w	;volatile
  1666  0672  39F0               	andlw	240
  1667  0673  0471               	iorwf	??_lcd_instReg+1,w
  1668  0674  0088               	movwf	8	;volatile
  1669  0675                     l707:
  1670                           
  1671                           ;lcd.c: 72:     PORTDbits.RD5 = 0;
  1672  0675  1288               	bcf	8,5	;volatile
  1673                           
  1674                           ;lcd.c: 73:     if( i == 0x01 || i == 0x02 )
  1675  0676  0372               	decf	lcd_instReg@i,w
  1676  0677  1903               	btfsc	3,2
  1677  0678  2E7A               	goto	u21
  1678  0679  2E7B               	goto	u20
  1679  067A                     u21:
  1680  067A  2E81               	goto	l711
  1681  067B                     u20:
  1682  067B                     l709:
  1683  067B  3002               	movlw	2
  1684  067C  0672               	xorwf	lcd_instReg@i,w
  1685  067D  1D03               	btfss	3,2
  1686  067E  2E80               	goto	u31
  1687  067F  2E81               	goto	u30
  1688  0680                     u31:
  1689  0680  2E8B               	goto	l713
  1690  0681                     u30:
  1691  0681                     l711:
  1692                           
  1693                           ;lcd.c: 74:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1694  0681  3003               	movlw	3
  1695  0682  00F1               	movwf	??_lcd_instReg+1
  1696  0683  3097               	movlw	151
  1697  0684  00F0               	movwf	??_lcd_instReg
  1698  0685                     u717:
  1699  0685  0BF0               	decfsz	??_lcd_instReg,f
  1700  0686  2E85               	goto	u717
  1701  0687  0BF1               	decfsz	??_lcd_instReg+1,f
  1702  0688  2E85               	goto	u717
  1703  0689  2E8A               	nop2
  1704  068A  2E8F               	goto	l715
  1705  068B                     l713:
  1706                           
  1707                           ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1708  068B  300D               	movlw	13
  1709  068C  00F0               	movwf	??_lcd_instReg
  1710  068D                     u727:
  1711  068D  0BF0               	decfsz	??_lcd_instReg,f
  1712  068E  2E8D               	goto	u727
  1713  068F                     l715:
  1714                           
  1715                           ;lcd.c: 77:     PORTDbits.RD5 = 1;
  1716  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0691  1688               	bsf	8,5	;volatile
  1719  0692                     l717:
  1720                           
  1721                           ;lcd.c: 80:     if( (i & 0xF0) == (0x20 | 0x00) )
  1722  0692  30F0               	movlw	240
  1723  0693  0572               	andwf	lcd_instReg@i,w
  1724  0694  00F0               	movwf	??_lcd_instReg
  1725  0695  3020               	movlw	32
  1726  0696  0670               	xorwf	??_lcd_instReg,w
  1727  0697  1D03               	btfss	3,2
  1728  0698  2E9A               	goto	u41
  1729  0699  2E9B               	goto	u40
  1730  069A                     u41:
  1731  069A  2EB3               	goto	l729
  1732  069B                     u40:
  1733  069B                     l719:
  1734                           
  1735                           ;lcd.c: 81:     {;lcd.c: 82:         PORTDbits.RD4 = 0;
  1736  069B  1208               	bcf	8,4	;volatile
  1737  069C                     l721:
  1738                           
  1739                           ;lcd.c: 83:         PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  1740  069C  0872               	movf	lcd_instReg@i,w
  1741  069D  00F0               	movwf	??_lcd_instReg
  1742  069E  3004               	movlw	4
  1743  069F                     u55:
  1744  069F  1003               	clrc
  1745  06A0  0CF0               	rrf	??_lcd_instReg,f
  1746  06A1  3EFF               	addlw	-1
  1747  06A2  1D03               	skipz
  1748  06A3  2E9F               	goto	u55
  1749  06A4  300F               	movlw	15
  1750  06A5  0570               	andwf	??_lcd_instReg,w
  1751  06A6  00F1               	movwf	??_lcd_instReg+1
  1752  06A7  0808               	movf	8,w	;volatile
  1753  06A8  39F0               	andlw	240
  1754  06A9  0471               	iorwf	??_lcd_instReg+1,w
  1755  06AA  0088               	movwf	8	;volatile
  1756  06AB                     l723:
  1757                           
  1758                           ;lcd.c: 84:         PORTDbits.RD5 = 0;
  1759  06AB  1288               	bcf	8,5	;volatile
  1760  06AC                     l725:
  1761                           
  1762                           ;lcd.c: 85:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1763  06AC  300D               	movlw	13
  1764  06AD  00F0               	movwf	??_lcd_instReg
  1765  06AE                     u737:
  1766  06AE  0BF0               	decfsz	??_lcd_instReg,f
  1767  06AF  2EAE               	goto	u737
  1768  06B0                     l727:
  1769                           
  1770                           ;lcd.c: 86:         PORTDbits.RD5 = 1;
  1771  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1772  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1773  06B2  1688               	bsf	8,5	;volatile
  1774  06B3                     l729:
  1775                           
  1776                           ;lcd.c: 89:     PORTDbits.RD4 = 0;
  1777  06B3  1208               	bcf	8,4	;volatile
  1778  06B4                     l731:
  1779                           
  1780                           ;lcd.c: 90:     PORTD = ((PORTD & 0xF0)|(i&0x0F));
  1781  06B4  300F               	movlw	15
  1782  06B5  0572               	andwf	lcd_instReg@i,w
  1783  06B6  00F0               	movwf	??_lcd_instReg
  1784  06B7  0808               	movf	8,w	;volatile
  1785  06B8  39F0               	andlw	240
  1786  06B9  0470               	iorwf	??_lcd_instReg,w
  1787  06BA  0088               	movwf	8	;volatile
  1788  06BB                     l733:
  1789                           
  1790                           ;lcd.c: 91:     PORTDbits.RD5 = 0;
  1791  06BB  1288               	bcf	8,5	;volatile
  1792  06BC                     l735:
  1793                           
  1794                           ;lcd.c: 92:     if( i == 0x01 || i == 0x02 )
  1795  06BC  0372               	decf	lcd_instReg@i,w
  1796  06BD  1903               	btfsc	3,2
  1797  06BE  2EC0               	goto	u61
  1798  06BF  2EC1               	goto	u60
  1799  06C0                     u61:
  1800  06C0  2EC7               	goto	l739
  1801  06C1                     u60:
  1802  06C1                     l737:
  1803  06C1  3002               	movlw	2
  1804  06C2  0672               	xorwf	lcd_instReg@i,w
  1805  06C3  1D03               	btfss	3,2
  1806  06C4  2EC6               	goto	u71
  1807  06C5  2EC7               	goto	u70
  1808  06C6                     u71:
  1809  06C6  2ED1               	goto	l741
  1810  06C7                     u70:
  1811  06C7                     l739:
  1812                           
  1813                           ;lcd.c: 93:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1814  06C7  3003               	movlw	3
  1815  06C8  00F1               	movwf	??_lcd_instReg+1
  1816  06C9  3097               	movlw	151
  1817  06CA  00F0               	movwf	??_lcd_instReg
  1818  06CB                     u747:
  1819  06CB  0BF0               	decfsz	??_lcd_instReg,f
  1820  06CC  2ECB               	goto	u747
  1821  06CD  0BF1               	decfsz	??_lcd_instReg+1,f
  1822  06CE  2ECB               	goto	u747
  1823  06CF  2ED0               	nop2
  1824  06D0  2ED5               	goto	l743
  1825  06D1                     l741:
  1826                           
  1827                           ;lcd.c: 95:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1828  06D1  300D               	movlw	13
  1829  06D2  00F0               	movwf	??_lcd_instReg
  1830  06D3                     u757:
  1831  06D3  0BF0               	decfsz	??_lcd_instReg,f
  1832  06D4  2ED3               	goto	u757
  1833  06D5                     l743:
  1834                           
  1835                           ;lcd.c: 96:     PORTDbits.RD5 = 1;
  1836  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1837  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1838  06D7  1688               	bsf	8,5	;volatile
  1839  06D8                     l89:
  1840  06D8  0008               	return
  1841  06D9                     __end_of_lcd_instReg:
  1842                           
  1843                           	psect	text6
  1844  05B1                     __ptext6:	
  1845 ;; *************** function _delay *****************
  1846 ;; Defined at:
  1847 ;;		line 12 in file "delay.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  t               2    0[COMMON] unsigned int 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         2       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         3       0       0       0       0
  1865 ;;Total ram usage:        3 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_lcd_init
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874  05B1                     _delay:	
  1875                           ;psect for function _delay
  1876                           
  1877  05B1                     l885:	
  1878                           ;incstack = 0
  1879                           ; Regs used in _delay: [wreg+status,2+status,0]
  1880                           
  1881                           
  1882                           ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  1883  05B1  2DBF               	goto	l889
  1884  05B2                     l887:
  1885                           
  1886                           ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1887  05B2  30C7               	movlw	199
  1888  05B3  00F2               	movwf	??_delay
  1889  05B4                     u767:
  1890  05B4  2DB5               	nop2
  1891  05B5  0BF2               	decfsz	??_delay,f
  1892  05B6  2DB4               	goto	u767
  1893  05B7  2DB8               	nop2
  1894  05B8  2DB9               	nop2
  1895                           
  1896                           ;delay.c: 17:         --t;
  1897  05B9  3001               	movlw	1
  1898  05BA  02F0               	subwf	delay@t,f
  1899  05BB  3000               	movlw	0
  1900  05BC  1C03               	skipc
  1901  05BD  03F1               	decf	delay@t+1,f
  1902  05BE  02F1               	subwf	delay@t+1,f
  1903  05BF                     l889:
  1904                           
  1905                           ;delay.c: 14:     while( t )
  1906  05BF  0870               	movf	delay@t,w
  1907  05C0  0471               	iorwf	delay@t+1,w
  1908  05C1  1D03               	btfss	3,2
  1909  05C2  2DC4               	goto	u391
  1910  05C3  2DC5               	goto	u390
  1911  05C4                     u391:
  1912  05C4  2DB2               	goto	l887
  1913  05C5                     u390:
  1914  05C5                     l8:
  1915  05C5  0008               	return
  1916  05C6                     __end_of_delay:
  1917                           
  1918                           	psect	text7
  1919  0593                     __ptext7:	
  1920 ;; *************** function _Sensores_init *****************
  1921 ;; Defined at:
  1922 ;;		line 5 in file "Sensores.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		None
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0
  1939 ;;      Totals:         0       0       0       0       0
  1940 ;;Total ram usage:        0 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949  0593                     _Sensores_init:	
  1950                           ;psect for function _Sensores_init
  1951                           
  1952  0593                     l787:	
  1953                           ;incstack = 0
  1954                           ; Regs used in _Sensores_init: []
  1955                           
  1956                           
  1957                           ;Sensores.c: 8:     TRISCbits.TRISC0 = 1;
  1958  0593  1683               	bsf	3,5	;RP0=1, select bank1
  1959  0594  1303               	bcf	3,6	;RP1=0, select bank1
  1960  0595  1407               	bsf	7,0	;volatile
  1961                           
  1962                           ;Sensores.c: 9:     TRISCbits.TRISC1 = 1;
  1963  0596  1487               	bsf	7,1	;volatile
  1964                           
  1965                           ;Sensores.c: 10:     TRISCbits.TRISC2 = 1;
  1966  0597  1507               	bsf	7,2	;volatile
  1967                           
  1968                           ;Sensores.c: 11:     TRISCbits.TRISC3 = 1;
  1969  0598  1587               	bsf	7,3	;volatile
  1970                           
  1971                           ;Sensores.c: 12:     TRISCbits.TRISC4 = 1;
  1972  0599  1607               	bsf	7,4	;volatile
  1973                           
  1974                           ;Sensores.c: 13:     TRISCbits.TRISC5 = 1;
  1975  059A  1687               	bsf	7,5	;volatile
  1976                           
  1977                           ;Sensores.c: 14:     TRISAbits.TRISA6 = 1;
  1978  059B  1705               	bsf	5,6	;volatile
  1979                           
  1980                           ;Sensores.c: 15:     TRISAbits.TRISA7 = 1;
  1981  059C  1785               	bsf	5,7	;volatile
  1982  059D                     l67:
  1983  059D  0008               	return
  1984  059E                     __end_of_Sensores_init:
  1985                           
  1986                           	psect	text8
  1987  058D                     __ptext8:	
  1988 ;; *************** function _Potencia_init *****************
  1989 ;; Defined at:
  1990 ;;		line 4 in file "Potencia.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		None
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       0       0       0       0
  2005 ;;      Locals:         0       0       0       0       0
  2006 ;;      Temps:          0       0       0       0       0
  2007 ;;      Totals:         0       0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017  058D                     _Potencia_init:	
  2018                           ;psect for function _Potencia_init
  2019                           
  2020  058D                     l789:	
  2021                           ;incstack = 0
  2022                           ; Regs used in _Potencia_init: []
  2023                           
  2024                           
  2025                           ;Potencia.c: 7:     TRISAbits.TRISA1 = 0;
  2026  058D  1683               	bsf	3,5	;RP0=1, select bank1
  2027  058E  1303               	bcf	3,6	;RP1=0, select bank1
  2028  058F  1085               	bcf	5,1	;volatile
  2029                           
  2030                           ;Potencia.c: 8:     TRISDbits.TRISD6 = 0;
  2031  0590  1308               	bcf	8,6	;volatile
  2032                           
  2033                           ;Potencia.c: 9:     TRISDbits.TRISD7 = 0;
  2034  0591  1388               	bcf	8,7	;volatile
  2035  0592                     l111:
  2036  0592  0008               	return
  2037  0593                     __end_of_Potencia_init:
  2038  007E                     btemp	set	126	;btemp
  2039  007E                     wtemp0	set	126
  2040                           
  2041                           	psect	idloc
  2042                           
  2043                           ;Config register IDLOC0 @ 0x2000
  2044                           ;	unspecified, using default values
  2045  2000                     	org	8192
  2046  2000  3FFF               	dw	16383
  2047                           
  2048                           ;Config register IDLOC1 @ 0x2001
  2049                           ;	unspecified, using default values
  2050  2001                     	org	8193
  2051  2001  3FFF               	dw	16383
  2052                           
  2053                           ;Config register IDLOC2 @ 0x2002
  2054                           ;	unspecified, using default values
  2055  2002                     	org	8194
  2056  2002  3FFF               	dw	16383
  2057                           
  2058                           ;Config register IDLOC3 @ 0x2003
  2059                           ;	unspecified, using default values
  2060  2003                     	org	8195
  2061  2003  3FFF               	dw	16383
  2062                           
  2063                           	psect	config
  2064                           
  2065                           ;Config register CONFIG1 @ 0x2007
  2066                           ;	Oscillator Selection bits
  2067                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2068                           ;	Watchdog Timer Enable bit
  2069                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2070                           ;	Power-up Timer Enable bit
  2071                           ;	PWRTE = OFF, PWRT disabled
  2072                           ;	RE3/MCLR pin function select bit
  2073                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2074                           ;	Code Protection bit
  2075                           ;	CP = OFF, Program memory code protection is disabled
  2076                           ;	Data Code Protection bit
  2077                           ;	CPD = OFF, Data memory code protection is disabled
  2078                           ;	Brown Out Reset Selection bits
  2079                           ;	BOREN = OFF, BOR disabled
  2080                           ;	Internal External Switchover bit
  2081                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2082                           ;	Fail-Safe Clock Monitor Enabled bit
  2083                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2084                           ;	Low Voltage Programming Enable bit
  2085                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2086                           ;	In-Circuit Debugger Mode bit
  2087                           ;	DEBUG = 0x1, unprogrammed default
  2088  2007                     	org	8199
  2089  2007  20D4               	dw	8404
  2090                           
  2091                           ;Config register CONFIG2 @ 0x2008
  2092                           ;	Brown-out Reset Selection bit
  2093                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2094                           ;	Flash Program Memory Self Write Enable bits
  2095                           ;	WRT = OFF, Write protection off
  2096  2008                     	org	8200
  2097  2008  3FFF               	dw	16383

Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[6]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _lcd_print->_lcd_lincol
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2274
                                             11 COMMON     2     2      0
                      _Potencia_init
                      _Sensores_init
                           _lcd_init
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2    1903
                                              6 COMMON     5     3      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     240
                                              3 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     371
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     120
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Sensores_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Potencia_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Potencia_init
   _Sensores_init
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Aug 18 00:06:27 2022

                      l8 05C5                        pc 0002             lcd_dataReg@d 0072  
                     l50 07E3                       l51 07E2                       l53 07E8  
                     l54 07F3                       l46 07D3                       l55 07F2  
                     l47 07D2                       l49 07D8                       l67 059D  
                     l92 05F1                       l95 05B0                       l89 06D8  
                     l98 0661                       u20 067B                       u21 067A  
                     u30 0681                       u31 0680                       u15 0669  
                     u40 069B                       u41 069A                       u60 06C1  
                     u61 06C0                       u70 06C7                       u71 06C6  
                     u55 069F                       u95 05CD                       fsr 0004  
                    l111 0592                      l104 0622                      l711 0681  
                    l703 0663                      l721 069C                      l713 068B  
                    l705 0666                      l731 06B4                      l723 06AB  
                    l715 068F                      l707 0675                      l741 06D1  
                    l733 06BB                      l725 06AC                      l717 0692  
                    l709 067B                      l901 0631                      l743 06D5  
                    l735 06BC                      l727 06B0                      l719 069B  
                    l903 0632                      l751 05C7                      l911 05F7  
                    l737 06C1                      l729 06B3                      l905 0633  
                    l761 05E1                      l753 05CA                      l913 0602  
                    l921 06D9                      l739 06C7                      l907 063D  
                    l763 05E2                      l755 05D9                      l915 060E  
                    l931 06FE                      l923 06DE                      l765 05E9  
                    l757 05DA                      l917 0612                      l909 05F3  
                    l941 0720                      l933 0704                      l925 06E3  
                    l767 05EE                      l759 05DE                      l919 0616  
                    l951 074C                      l943 0724                      l935 0708  
                    l927 06E8                      l961 076C                      l953 0750  
                    l945 0732                      l937 070C                      l929 06F3  
                    l787 0593                      l891 059F                      l971 0796  
                    l963 0770                      l955 0754                      l947 0738  
                    l939 071A                      l789 058D                      l885 05B1  
                    l893 0623                      l981 07B8                      l973 079C  
                    l965 077E                      l957 0762                      l949 0746  
                    l887 05B2                      l895 062C                      l991 07DC  
                    l983 07C6                      l975 07AA                      l967 0784  
                    l959 0768                      l889 05BF                      l897 062F  
                    l993 07E0                      l985 07CC                      l977 07B0  
                    l969 0788                      l899 0630                      l995 07E7  
                    l987 07D0                      l979 07B4                      l997 07EC  
                    l989 07D7                      l999 07F0                      u410 0622  
                    u411 0621                      u500 0754                      u420 0704  
                    u405 05A2                      u501 0753                      u421 0703  
                    u510 0768                      u430 0708                      u511 0767  
                    u431 0707                      u600 07CC                      u520 076C  
                    u440 070C                      u601 07CB                      u521 076B  
                    u441 070B                      u610 07D0                      u530 0770  
                    u450 0720                      u611 07CF                      u531 076F  
                    u451 071F                      u620 07D7                      u540 0784  
                    u460 0724                      u621 07D6                      u541 0783  
                    u461 0723                      u390 05C5                      u630 07DC  
                    u550 0788                      u470 0738                      u391 05C4  
                    u631 07DB                      u551 0787                      u471 0737  
                    u640 07E0                      u560 079C                      u480 074C  
                    u641 07DF                      u561 079B                      u481 074B  
                    u650 07E7                      u570 07B0                      u490 0750  
                    u707 05EC                      u651 07E6                      u571 07AF  
                    u491 074F                      u660 07EC                      u580 07B4  
                    u717 0685                      u661 07EB                      u581 07B3  
                    u670 07F0                      u590 07B8                      u727 068D  
                    u671 07EF                      u591 07B7                      u680 07F7  
                    u737 06AE                      u681 07F6                      u747 06CB  
                    u757 06D3                      u767 05B4                      u697 05DC  
                    fsr0 0004                     l1001 07F7                     STR_1 001A  
                   STR_2 0009                     STR_3 003D                     STR_4 0031  
                   STR_5 002B                     STR_6 0037                     STR_7 003D  
                   STR_8 0031                     STR_9 002B                     _main 06D9  
                   btemp 007E                     start 0000             lcd_instReg@i 0072  
                  ?_main 0070                    STR_10 0037                    _PORTD 0008  
           lcd_print@col 0076             lcd_print@lin 007A             lcd_print@pos 0079  
           lcd_print@str 0077                    _delay 05B1                    pclath 000A  
                  status 0003                    wtemp0 007E            lcd_lincol@col 0073  
          lcd_lincol@lin 0075          __initialization 07FC             __end_of_main 07FC  
                 ??_main 007B                   ?_delay 0070    __end_of_Sensores_init 059E  
       __end_of_lcd_init 0662                   delay@t 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_delay 05C6    __end_of_Potencia_init 0593  
                ??_delay 0072               __pmaintext 06D9               _lcd_lincol 059E  
              ?_lcd_init 0070               __stringtab 0003        __end_of_lcd_print 0623  
                __ptext1 05F2                  __ptext2 059E                  __ptext3 05C6  
                __ptext4 0623                  __ptext5 0662                  __ptext6 05B1  
                __ptext7 0593                  __ptext8 058D               ??_lcd_init 0073  
   end_of_initialization 07FC                _PORTAbits 0005                _PORTCbits 0007  
              _PORTDbits 0008                _TRISAbits 0085                _TRISCbits 0087  
            ?_lcd_lincol 0073                _TRISDbits 0088            ??_lcd_dataReg 0070  
          ??_lcd_instReg 0070      start_initialization 07FC      __end_of_lcd_dataReg 05F2  
    __end_of_lcd_instReg 06D9                ___latbits 0002            _Sensores_init 0593  
              __pstrings 0003                _lcd_print 05F2              _lcd_dataReg 05C6  
            _lcd_instReg 0662           ?_Sensores_init 0070            _Potencia_init 058D  
             ?_lcd_print 0076              __stringbase 0008             ??_lcd_lincol 0074  
     __end_of_lcd_lincol 05B1           ?_Potencia_init 0070       __end_of__stringtab 0009  
               _lcd_init 0623          ??_Sensores_init 0070              ??_lcd_print 0078  
              stringcode 0003          ??_Potencia_init 0070                 stringdir 0003  
               stringtab 0003             ?_lcd_dataReg 0070             ?_lcd_instReg 0070  
